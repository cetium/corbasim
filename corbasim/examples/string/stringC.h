// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:135

#ifndef _TAO_IDL_STRINGC_H_
#define _TAO_IDL_STRINGC_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from 
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_root/root_ch.cpp:62
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:49

namespace StringTest
{
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:413
  
  typedef char * Name;
  typedef ::CORBA::String_var Name_var;
  typedef ::CORBA::String_out Name_out;
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:49
  
  extern  ::CORBA::TypeCode_ptr const _tc_Name;
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_STRINGTEST_NAMESEQ_CH_)
#define _STRINGTEST_NAMESEQ_CH_
  
  class NameSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        NameSeq
      >
    NameSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        NameSeq
      >
    NameSeq_out;
  
  class  NameSeq
    : public
        TAO::unbounded_basic_string_sequence<char>
  {
  public:
    NameSeq (void);
    NameSeq ( ::CORBA::ULong max);
    NameSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Char ** buffer, 
        ::CORBA::Boolean release = false
      );
    NameSeq (const NameSeq &);
    virtual ~NameSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef NameSeq_var _var_type;
    typedef NameSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:49
  
  extern  ::CORBA::TypeCode_ptr const _tc_NameSeq;
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:413
  
  typedef char * NameID;
  typedef ::CORBA::String_var NameID_var;
  typedef ::CORBA::String_out NameID_out;
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:49
  
  extern  ::CORBA::TypeCode_ptr const _tc_NameID;
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_STRINGTEST_NAMEIDSEQ_CH_)
#define _STRINGTEST_NAMEIDSEQ_CH_
  
  class NameIDSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        NameIDSeq
      >
    NameIDSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        NameIDSeq
      >
    NameIDSeq_out;
  
  class  NameIDSeq
    : public
        TAO::unbounded_basic_string_sequence<char>
  {
  public:
    NameIDSeq (void);
    NameIDSeq ( ::CORBA::ULong max);
    NameIDSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Char ** buffer, 
        ::CORBA::Boolean release = false
      );
    NameIDSeq (const NameIDSeq &);
    virtual ~NameIDSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef NameIDSeq_var _var_type;
    typedef NameIDSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:49
  
  extern  ::CORBA::TypeCode_ptr const _tc_NameIDSeq;
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:269
  
  struct StructWithStrings;
  
  typedef
    TAO_Var_Var_T<
        StructWithStrings
      >
    StructWithStrings_var;
  
  typedef
    TAO_Out_T<
        StructWithStrings
      >
    StructWithStrings_out;
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:57
  
  struct  StructWithStrings
  {
    typedef StructWithStrings_var _var_type;
    typedef StructWithStrings_out _out_type;
    
    static void _tao_any_destructor (void *);
    TAO::String_Manager str;
    TAO::String_Manager nam;
    TAO::String_Manager id;
  };
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:49
  
  extern  ::CORBA::TypeCode_ptr const _tc_StructWithStrings;
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_interface.cpp:638

#if !defined (_STRINGTEST_INTERFACESTRING__VAR_OUT_CH_)
#define _STRINGTEST_INTERFACESTRING__VAR_OUT_CH_
  
  class InterfaceString;
  typedef InterfaceString *InterfaceString_ptr;
  
  typedef
    TAO_Objref_Var_T<
        InterfaceString
      >
    InterfaceString_var;
  
  typedef
    TAO_Objref_Out_T<
        InterfaceString
      >
    InterfaceString_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:54

#if !defined (_STRINGTEST_INTERFACESTRING_CH_)
#define _STRINGTEST_INTERFACESTRING_CH_
  
  class  InterfaceString
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<InterfaceString>;
    typedef InterfaceString_ptr _ptr_type;
    typedef InterfaceString_var _var_type;
    typedef InterfaceString_out _out_type;
    
    // The static operations.
    static InterfaceString_ptr _duplicate (InterfaceString_ptr obj);
    
    static void _tao_release (InterfaceString_ptr obj);
    
    static InterfaceString_ptr _narrow (::CORBA::Object_ptr obj);
    static InterfaceString_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static InterfaceString_ptr _nil (void)
    {
      return static_cast<InterfaceString_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_operation/operation_ch.cpp:46
    
    virtual void operation1 (
        const char * s);
    
    // TAO_IDL - Generated from
    // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_operation/operation_ch.cpp:46
    
    virtual void operation2 (
        const char * n);
    
    // TAO_IDL - Generated from
    // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_operation/operation_ch.cpp:46
    
    virtual void operation3 (
        const ::StringTest::NameSeq & n);
    
    // TAO_IDL - Generated from
    // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_operation/operation_ch.cpp:46
    
    virtual void operation4 (
        const ::StringTest::StructWithStrings & n);
    
    // TAO_IDL - Generated from
    // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_operation/operation_ch.cpp:46
    
    virtual void operation5 (
        const char * n);
    
    // TAO_IDL - Generated from
    // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_operation/operation_ch.cpp:46
    
    virtual void operation6 (
        const ::StringTest::NameIDSeq & n);
    
    // TAO_IDL - Generated from
    // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_InterfaceString_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    InterfaceString (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void StringTest_InterfaceString_setup_collocation (void);
    
    // Concrete non-local interface only.
    InterfaceString (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0);
    
    // Non-local interface only.
    InterfaceString (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~InterfaceString (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    InterfaceString (const InterfaceString &);
    
    void operator= (const InterfaceString &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:49
  
  extern  ::CORBA::TypeCode_ptr const _tc_InterfaceString;

// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:78

} // module StringTest

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_root/root.cpp:139

extern 
TAO::Collocation_Proxy_Broker *
(*StringTest__TAO_InterfaceString_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_traits.cpp:64

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_STRINGTEST_INTERFACESTRING__TRAITS_)
#define _STRINGTEST_INTERFACESTRING__TRAITS_
  
  template<>
  struct  Objref_Traits< ::StringTest::InterfaceString>
  {
    static ::StringTest::InterfaceString_ptr duplicate (
        ::StringTest::InterfaceString_ptr p
      );
    static void release (
        ::StringTest::InterfaceString_ptr p
      );
    static ::StringTest::InterfaceString_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::StringTest::InterfaceString_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:53


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const StringTest::NameSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, StringTest::NameSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StringTest::NameSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const StringTest::NameSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:53


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const StringTest::NameIDSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, StringTest::NameIDSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StringTest::NameIDSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const StringTest::NameIDSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:53


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const StringTest::StructWithStrings &); // copying version
 void operator<<= (::CORBA::Any &, StringTest::StructWithStrings*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StringTest::StructWithStrings *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const StringTest::StructWithStrings *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace StringTest
{
   void operator<<= ( ::CORBA::Any &, InterfaceString_ptr); // copying
   void operator<<= ( ::CORBA::Any &, InterfaceString_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, InterfaceString_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, StringTest::InterfaceString_ptr); // copying
 void operator<<= (::CORBA::Any &, StringTest::InterfaceString_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StringTest::InterfaceString_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_StringTest_NameSeq_H_
#define _TAO_CDR_OP_StringTest_NameSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const StringTest::NameSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    StringTest::NameSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_StringTest_NameSeq_H_ */

// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_StringTest_NameIDSeq_H_
#define _TAO_CDR_OP_StringTest_NameIDSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const StringTest::NameIDSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    StringTest::NameIDSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_StringTest_NameIDSeq_H_ */

// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const StringTest::StructWithStrings &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, StringTest::StructWithStrings &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:55

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const StringTest::InterfaceString_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, StringTest::InterfaceString_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:1226
#if defined (__ACE_INLINE__)
#include "stringC.inl"
#endif /* defined INLINE */

#endif /* ifndef */


